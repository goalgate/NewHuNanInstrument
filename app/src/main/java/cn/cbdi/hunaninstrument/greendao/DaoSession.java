package cn.cbdi.hunaninstrument.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import cn.cbdi.hunaninstrument.Bean.AttendanceScene;
import cn.cbdi.hunaninstrument.Bean.Employer;
import cn.cbdi.hunaninstrument.Bean.FingerprintUser;
import cn.cbdi.hunaninstrument.Bean.Keeper;
import cn.cbdi.hunaninstrument.Bean.ReUploadBean;
import cn.cbdi.hunaninstrument.Bean.ReUploadWithBsBean;

import cn.cbdi.hunaninstrument.greendao.AttendanceSceneDao;
import cn.cbdi.hunaninstrument.greendao.EmployerDao;
import cn.cbdi.hunaninstrument.greendao.FingerprintUserDao;
import cn.cbdi.hunaninstrument.greendao.KeeperDao;
import cn.cbdi.hunaninstrument.greendao.ReUploadBeanDao;
import cn.cbdi.hunaninstrument.greendao.ReUploadWithBsBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig attendanceSceneDaoConfig;
    private final DaoConfig employerDaoConfig;
    private final DaoConfig fingerprintUserDaoConfig;
    private final DaoConfig keeperDaoConfig;
    private final DaoConfig reUploadBeanDaoConfig;
    private final DaoConfig reUploadWithBsBeanDaoConfig;

    private final AttendanceSceneDao attendanceSceneDao;
    private final EmployerDao employerDao;
    private final FingerprintUserDao fingerprintUserDao;
    private final KeeperDao keeperDao;
    private final ReUploadBeanDao reUploadBeanDao;
    private final ReUploadWithBsBeanDao reUploadWithBsBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        attendanceSceneDaoConfig = daoConfigMap.get(AttendanceSceneDao.class).clone();
        attendanceSceneDaoConfig.initIdentityScope(type);

        employerDaoConfig = daoConfigMap.get(EmployerDao.class).clone();
        employerDaoConfig.initIdentityScope(type);

        fingerprintUserDaoConfig = daoConfigMap.get(FingerprintUserDao.class).clone();
        fingerprintUserDaoConfig.initIdentityScope(type);

        keeperDaoConfig = daoConfigMap.get(KeeperDao.class).clone();
        keeperDaoConfig.initIdentityScope(type);

        reUploadBeanDaoConfig = daoConfigMap.get(ReUploadBeanDao.class).clone();
        reUploadBeanDaoConfig.initIdentityScope(type);

        reUploadWithBsBeanDaoConfig = daoConfigMap.get(ReUploadWithBsBeanDao.class).clone();
        reUploadWithBsBeanDaoConfig.initIdentityScope(type);

        attendanceSceneDao = new AttendanceSceneDao(attendanceSceneDaoConfig, this);
        employerDao = new EmployerDao(employerDaoConfig, this);
        fingerprintUserDao = new FingerprintUserDao(fingerprintUserDaoConfig, this);
        keeperDao = new KeeperDao(keeperDaoConfig, this);
        reUploadBeanDao = new ReUploadBeanDao(reUploadBeanDaoConfig, this);
        reUploadWithBsBeanDao = new ReUploadWithBsBeanDao(reUploadWithBsBeanDaoConfig, this);

        registerDao(AttendanceScene.class, attendanceSceneDao);
        registerDao(Employer.class, employerDao);
        registerDao(FingerprintUser.class, fingerprintUserDao);
        registerDao(Keeper.class, keeperDao);
        registerDao(ReUploadBean.class, reUploadBeanDao);
        registerDao(ReUploadWithBsBean.class, reUploadWithBsBeanDao);
    }
    
    public void clear() {
        attendanceSceneDaoConfig.clearIdentityScope();
        employerDaoConfig.clearIdentityScope();
        fingerprintUserDaoConfig.clearIdentityScope();
        keeperDaoConfig.clearIdentityScope();
        reUploadBeanDaoConfig.clearIdentityScope();
        reUploadWithBsBeanDaoConfig.clearIdentityScope();
    }

    public AttendanceSceneDao getAttendanceSceneDao() {
        return attendanceSceneDao;
    }

    public EmployerDao getEmployerDao() {
        return employerDao;
    }

    public FingerprintUserDao getFingerprintUserDao() {
        return fingerprintUserDao;
    }

    public KeeperDao getKeeperDao() {
        return keeperDao;
    }

    public ReUploadBeanDao getReUploadBeanDao() {
        return reUploadBeanDao;
    }

    public ReUploadWithBsBeanDao getReUploadWithBsBeanDao() {
        return reUploadWithBsBeanDao;
    }

}
